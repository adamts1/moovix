{"version":3,"sources":["Pages/Login/Login.js","Components/PostCard/PostCard.js","Components/Personal/Personal.js","Components/All/All.js","Model/PostModel.js","Pages/Posts/Posts.js","App.js","reportWebVitals.js","index.js"],"names":["Login","setToken","history","useHistory","formik","useFormik","initialValues","email","onSubmit","values","axios","get","then","response","localStorage","setItem","data","push","id","className","handleSubmit","htmlFor","name","type","required","onChange","handleChange","value","password","PostCard","post","savePost","removePost","Card","style","width","Body","Title","title","Text","body","userId","Button","onClick","variant","Personal","personalPosts","map","All","posts","PostModel","this","Posts","token","useState","tabKey","setTabKey","setPosts","setPersonalPosts","allPosts","setAllPosts","index","useParams","useEffect","getItem","userid","replace","personalModelList","filter","allModelList","Container","Tabs","activeKey","onSelect","k","Tab","eventKey","item","concat","App","window","removeItem","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","interceptors","request","use","config","myStorage","headers","Authorization","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb42d61a.chunk.js","sourcesContent":["import './Login.css'\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst Login = ({setToken}) => {\r\n    const history = useHistory();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n        onSubmit: values => {\r\n            setToken(values.email);\r\n            const searchURL = \"https://jsonplaceholder.typicode.com/users/1\";\r\n            axios.get(searchURL).then(response => {\r\n                localStorage.setItem('token', response.data.email); \r\n                history.push(\"/posts:\" + response.data.id)\r\n            });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div className='p-login'>\r\n            <h1>Login</h1>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <label htmlFor=\"email\">Email Address</label>\r\n                <input\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    required\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                />\r\n\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    required\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                />\r\n                <div>\r\n                    <button type=\"submit\">Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import './PostCard.css'\r\nimport { Card,Button } from 'react-bootstrap';\r\n\r\n\r\nconst PostCard = ({ post, type , savePost, removePost}) => {\r\n    return (\r\n        <div className='c-postcard'>\r\n            <Card style={{ width: '18rem' }}>\r\n                <Card.Body>\r\n                    <Card.Title>Title: {post.title}</Card.Title>\r\n                    <Card.Text>\r\n                         Body: {post.body} \r\n                        \r\n                     <div className=\"dataInfo\">\r\n                         ID: {post.id}\r\n                        <br/>\r\n                        User ID:{post.userId}\r\n                    </div>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"button-warper\">\r\n            {type ==\"all\" \r\n                    ? <Button onClick={()=>savePost(post)} variant=\"primary\">Save</Button>\r\n                    : <Button onClick={()=>removePost(post)} variant=\"primary\">Remove</Button>\r\n            }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostCard;","import './Personal.css'\r\nimport PostCard from './../PostCard/PostCard';\r\n\r\n\r\nconst Personal = ({ personalPosts, removePost }) => {\r\n\r\n    return (\r\n        <div>\r\n            {personalPosts\r\n                ? <div  className='c-personal'>\r\n                    {personalPosts.map(post =>\r\n                        <PostCard\r\n                            key={post.id}\r\n                            post ={post}\r\n                            type=\"personal\"\r\n                            removePost ={removePost}\r\n                        />\r\n                    )}\r\n                </div>\r\n                : <h1>No Personal Posts</h1>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Personal;","import './All.css';\r\nimport PostCard from './../PostCard/PostCard';\r\n\r\n\r\nconst All = ({ posts, savePost }) => {\r\n\r\n    return (\r\n        <div>\r\n            {posts\r\n            ? <div className='c-all'>\r\n            {posts.map(post =>\r\n                <PostCard\r\n                    key={post.id}       \r\n                    post = {post}\r\n                    type=\"all\"\r\n                    savePost={savePost}\r\n                />\r\n            )}\r\n            </div>\r\n            : <h1>No Posts</h1>\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default All;","export default class PostModel {\r\n    constructor(post) {\r\n        this.id = post.id;\r\n        this.userId = post.userId;\r\n        this.title = post.title;\r\n        this.body = post.body;\r\n    }\r\n}","import './Posts.css'\r\nimport { Tabs, Tab, Container } from 'react-bootstrap';\r\nimport Personal from '../../Components/Personal/Personal';\r\nimport All from '../../Components/All/All';\r\nimport PostModel from '../../Model/PostModel';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams } from 'react-router';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Posts = ({ token }) => {\r\n    const [tabKey, setTabKey] = useState('');\r\n    const [posts, setPosts] = useState();\r\n    const [personalPosts, setPersonalPosts] = useState();\r\n    const [allPosts, setAllPosts] = useState();\r\n    const history = useHistory();\r\n    const { index } = useParams();\r\n\r\n    useEffect(() => {     \r\n        if (localStorage.getItem('token') === token) {\r\n            const searchURL = \"https://jsonplaceholder.typicode.com/posts\";\r\n            axios.get(searchURL).then(response => {\r\n                setPosts(response.data)\r\n\r\n            });\r\n            \r\n        }else{\r\n            history.push(\"/\")\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {   \r\n        if(posts){\r\n            let userid = index.replace(/[/:] ?/g, \"\");\r\n\r\n            let personalObj = posts.filter(post => post.userId == userid); \r\n            const personalModelList = personalObj.map(post => new PostModel(post));\r\n            setPersonalPosts(personalModelList)\r\n\r\n            let allObj = posts.filter(post => post.userId != userid); \r\n            const allModelList = allObj.map(post => new PostModel(post));\r\n            setAllPosts(allModelList)\r\n        }\r\n    }, [posts])\r\n\r\n    const onSave = (post)=>{\r\n        setPersonalPosts(personalPosts.concat(post))\r\n    }\r\n\r\n    const onRemove = (post)=>{\r\n        setPersonalPosts(personalPosts.filter(item => item.id !== post.id));\r\n    }\r\n\r\n    return (\r\n        <div className='p-posts'>\r\n            <Container>\r\n                <h1>Posts</h1>\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={tabKey}\r\n                    onSelect={(k) => setTabKey(k)}>\r\n                    <Tab eventKey=\"personal\" title=\"Personal Posts\"></Tab>\r\n                    <Tab eventKey=\"all\" title=\"All Posts\"></Tab>\r\n                </Tabs>\r\n                <hr />\r\n                {tabKey === 'personal' &&\r\n                    <Personal\r\n                        personalPosts={personalPosts}\r\n                        removePost={onRemove}\r\n                    />\r\n                }\r\n                {tabKey === 'all' &&\r\n                    <All\r\n                        posts={allPosts}\r\n                        savePost={onSave}\r\n                    />\r\n                }\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\nexport default Posts;","import './App.css';\n\nimport Login from './Pages/Login/Login'\nimport Posts from './Pages/Posts/Posts'\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [token, setToken] = useState()\n\n  useEffect(() => {\n    window.localStorage.removeItem('token');\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch >\n          <Route exact path=\"/\">\n            <Login\n              setToken={(token) => setToken(token)}\n            />\n          </Route>\n          <Route exact path=\"/posts:index\">\n            <Posts\n              token={token}\n            />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios';\n\n\n\naxios.interceptors.request.use(function (config) {\n  const myStorage = localStorage.getItem('token');\n  config.headers.Authorization =  myStorage;\n  return config\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}